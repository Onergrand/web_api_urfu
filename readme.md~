# Парсер данных с сайта и REST API

Этот проект представляет собой приложение на **FastAPI**, которое выполняет регулярный парсинг данных с сайта и сохраняет их в базу данных PostgreSQL. Данные о продуктах сохраняются в базе данных, а также доступны через REST API для редактирования, удаления и просмотра.

## Описание

Проект выполняет парсинг товаров с сайта [maxidom.ru](https://www.maxidom.ru), извлекает информацию о товарах, таких как название и цена, и сохраняет их в базе данных PostgreSQL. Парсинг выполняется периодически с помощью планировщика задач **APScheduler**.

Проект предоставляет REST API с возможностью:

- Создания нового продукта в базе данных.
- Просмотра списка продуктов.
- Просмотра подробной информации о продукте.
- Обновления информации о продукте.
- Удаления продукта.

## Структура проекта

- **`main.py`** - основной файл приложения FastAPI, содержит бизнес-логику, парсинг и настройку API.
- **`crud.py`** - содержит функции для взаимодействия с базой данных.
- **`models.py`** - определяет структуру таблицы базы данных.
- **`schemas.py`** - описывает схемы данных для API.
- **`database.py`** - конфигурация базы данных и создание сессий.

## Установка и настройка

### 1. Клонирование репозитория

```bash
   git clone https://github.com/your-username/your-repository.git
   cd your-repository
   ```


### 2. Настройка PostgreSQL
Убедитесь, что PostgreSQL установлен и работает на вашем сервере.
Создайте базу данных с именем products-web-api:
```bash
psql -U postgres
CREATE DATABASE products-web-api;
В файле database.py убедитесь, что строка подключения к базе данных правильная:
```
python
Копировать код
SQLALCHEMY_DATABASE_URL = "postgresql://username:password@localhost/products-web-api"
Замените username и password на ваши данные для доступа к PostgreSQL.

4. Запуск приложения
Убедитесь, что база данных настроена, и все миграции выполнены.
Запустите сервер FastAPI:
bash
Копировать код
uvicorn main:app --reload
Сервер будет доступен по адресу http://localhost:8000.

5. Периодический парсинг
Парсинг данных с сайта выполняется автоматически с интервалом в 10 минут. Вы можете изменить интервал или остановить планировщик, если необходимо.

6. Логи
Логи приложения записываются в файл parse.log с использованием кодировки UTF-8. Логирует как успешные операции (добавление продуктов), так и ошибки.

Использование API